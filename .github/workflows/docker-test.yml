name: upload-docker-image

on:
  push:
    branches:
      - 'main'
    paths:
      - "flask"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: adi0509/flask-test:${{ github.sha }}, adi0509/flask-test:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - 
        name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.4.0
        with:
          config: k8s-config/kind-config.yaml
      
      -
        name: deploy k8s-deployment
        run: |
          echo "deploying flask deployment"
          kubectl apply -f kubernetes/deployment.yaml
          echo "deploying flask service"
          kubectl apply -f kubernetes/service.yaml
      
      -
        name: testing
        run: |
          while true;
          do
              OUTPUT=$(kubectl get pods)
              if echo "$OUTPUT" | grep -qH "ContainerCreating"; then
                  sleep 2
                  echo "waiting for container to be created"
              else
                  echo "container created"
                  break
              fi
          done
          #for testing
          #echo "docker ps output: "
          docker ps
          if curl -sL --fail localhost:30000 -o /dev/null; then
              echo "Success"
              echo "is_failed=1" >> $GITHUB_OUTPUT
          else
              echo "Fail"
              echo "is_failed=0" >> $GITHUB_OUTPUT
          fi
      # -
      #   name: setting fail status
      #   if: ${{ steps.testing.output.is_failed == '0' }}
      #   uses: actions/github-script@v3
      #   with:
      #     script: |
      #       core.setFailed('Validation failed')